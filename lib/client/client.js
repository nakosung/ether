// Generated by CoffeeScript 1.6.2
(function() {
  var app;

  app = angular.module('client', ['ui', 'ui.bootstrap', 'ether', 'ui.directives']);

  app.controller('MainCtrl', function($scope, collection, rpc, autologin, autocol, subscribe) {
    autocol($scope, 'myroom test me sync:stat users_online stats mm rooms mm:stats sku');
    $scope.rpc = rpc;
    window.rpc = rpc;
    return window.col = collection.all;
  });

  app.controller('RoomCtrl', function($scope, collection, rpc, autologin, autocol, subscribe) {
    var sub;

    autocol($scope, 'myroom me');
    $scope.rpc = rpc;
    setInterval((function() {
      var _ref, _ref1, _ref2;

      if (((_ref = collection.all.myroom) != null ? _ref.owner : void 0) == null) {
        return (_ref1 = rpc.room) != null ? (_ref2 = _ref1["in"]) != null ? _ref2.claimOwner() : void 0 : void 0;
      }
    }), 1000);
    $scope.chat = [];
    sub = subscribe(/^room:/, function(channel, message) {
      if (message.joined != null) {
        $scope.chat.push("" + message.joined + " has joined");
      }
      if (message.left != null) {
        $scope.chat.push("" + message.left + " has left");
      }
      if (message.chat != null) {
        $scope.chat.push([message.sender, message.chat].join(':'));
      }
      return $scope.chat = _.last($scope.chat, 5);
    });
    return $scope.$on('$destroy', function() {
      return sub();
    });
  });

  app.controller('FriendsCtrl', function($scope, autocol, rpc) {
    autocol($scope, 'me');
    $scope.rpc = rpc;
    return $scope.autocompleteSuggesions = function(req, res) {
      return rpc.auth.list.users(req.term, function(err, result) {
        if (!err) {
          return res(result);
        } else {
          return res([]);
        }
      });
    };
  });

}).call(this);
